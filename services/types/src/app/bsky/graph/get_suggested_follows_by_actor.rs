// @generated - This file is generated by esquema-codegen (forked from atrium-codegen). DO NOT EDIT.
//!Definitions for the `app.bsky.graph.getSuggestedFollowsByActor` namespace.
pub const NSID: &str = "app.bsky.graph.getSuggestedFollowsByActor";
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct ParametersData {
    pub actor: atrium_api::types::string::AtIdentifier,
}
pub type Parameters = atrium_api::types::Object<ParametersData>;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct OutputData {
    ///If true, response has fallen-back to generic results, and is not scoped using relativeToDid
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub is_fallback: core::option::Option<bool>,
    ///Snowflake for this recommendation, use when submitting recommendation events.
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub rec_id: core::option::Option<i64>,
    pub suggestions: Vec<crate::app::bsky::actor::defs::ProfileView>,
}
pub type Output = atrium_api::types::Object<OutputData>;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(tag = "error", content = "message")]
pub enum Error {}
impl std::fmt::Display for Error {
    fn fmt(&self, _f: &mut std::fmt::Formatter) -> std::fmt::Result {
        Ok(())
    }
}
