// @generated - This file is generated by esquema-codegen (forked from atrium-codegen). DO NOT EDIT.
//!Definitions for the `app.bsky.graph.getRelationships` namespace.
pub const NSID: &str = "app.bsky.graph.getRelationships";
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct ParametersData {
    ///Primary account requesting relationships for.
    pub actor: atrium_api::types::string::AtIdentifier,
    ///List of 'other' accounts to be related back to the primary.
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub others: core::option::Option<Vec<atrium_api::types::string::AtIdentifier>>,
}
pub type Parameters = atrium_api::types::Object<ParametersData>;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct OutputData {
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub actor: core::option::Option<atrium_api::types::string::Did>,
    pub relationships: Vec<atrium_api::types::Union<OutputRelationshipsItem>>,
}
pub type Output = atrium_api::types::Object<OutputData>;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(tag = "error", content = "message")]
pub enum Error {
    ///the primary actor at-identifier could not be resolved
    ActorNotFound(Option<String>),
}
impl std::fmt::Display for Error {
    fn fmt(&self, _f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Error::ActorNotFound(msg) => {
                write!(_f, "ActorNotFound")?;
                if let Some(msg) = msg {
                    write!(_f, ": {msg}")?;
                }
            }
        }
        Ok(())
    }
}
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(tag = "$type")]
pub enum OutputRelationshipsItem {
    #[serde(rename = "app.bsky.graph.defs#relationship")]
    AppBskyGraphDefsRelationship(Box<crate::app::bsky::graph::defs::Relationship>),
    #[serde(rename = "app.bsky.graph.defs#notFoundActor")]
    AppBskyGraphDefsNotFoundActor(Box<crate::app::bsky::graph::defs::NotFoundActor>),
}
