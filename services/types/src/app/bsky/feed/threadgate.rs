// @generated - This file is generated by esquema-codegen (forked from atrium-codegen). DO NOT EDIT.
//!Definitions for the `app.bsky.feed.threadgate` namespace.
use atrium_api::types::TryFromUnknown;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct RecordData {
    ///List of rules defining who can reply to this post. If value is an empty array, no one can reply. If value is undefined, anyone can reply.
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub allow: core::option::Option<Vec<atrium_api::types::Union<RecordAllowItem>>>,
    pub created_at: atrium_api::types::string::Datetime,
    ///List of hidden reply URIs.
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub hidden_replies: core::option::Option<Vec<String>>,
    ///Reference (AT-URI) to the post record.
    pub post: String,
}
pub type Record = atrium_api::types::Object<RecordData>;
impl From<atrium_api::types::Unknown> for RecordData {
    fn from(value: atrium_api::types::Unknown) -> Self {
        Self::try_from_unknown(value).unwrap()
    }
}
///Allow replies from actors who follow you.
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct FollowerRuleData {}
pub type FollowerRule = atrium_api::types::Object<FollowerRuleData>;
///Allow replies from actors you follow.
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct FollowingRuleData {}
pub type FollowingRule = atrium_api::types::Object<FollowingRuleData>;
///Allow replies from actors on a list.
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct ListRuleData {
    pub list: String,
}
pub type ListRule = atrium_api::types::Object<ListRuleData>;
///Allow replies from actors mentioned in your post.
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct MentionRuleData {}
pub type MentionRule = atrium_api::types::Object<MentionRuleData>;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(tag = "$type")]
pub enum RecordAllowItem {
    #[serde(rename = "app.bsky.feed.threadgate#mentionRule")]
    MentionRule(Box<MentionRule>),
    #[serde(rename = "app.bsky.feed.threadgate#followerRule")]
    FollowerRule(Box<FollowerRule>),
    #[serde(rename = "app.bsky.feed.threadgate#followingRule")]
    FollowingRule(Box<FollowingRule>),
    #[serde(rename = "app.bsky.feed.threadgate#listRule")]
    ListRule(Box<ListRule>),
}
