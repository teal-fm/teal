// @generated - This file is generated by esquema-codegen (forked from atrium-codegen). DO NOT EDIT.
//!Definitions for the `app.bsky.feed.postgate` namespace.
use atrium_api::types::TryFromUnknown;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct RecordData {
    pub created_at: atrium_api::types::string::Datetime,
    ///List of AT-URIs embedding this post that the author has detached from.
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub detached_embedding_uris: core::option::Option<Vec<String>>,
    ///List of rules defining who can embed this post. If value is an empty array or is undefined, no particular rules apply and anyone can embed.
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub embedding_rules: core::option::Option<
        Vec<atrium_api::types::Union<RecordEmbeddingRulesItem>>,
    >,
    ///Reference (AT-URI) to the post record.
    pub post: String,
}
pub type Record = atrium_api::types::Object<RecordData>;
impl From<atrium_api::types::Unknown> for RecordData {
    fn from(value: atrium_api::types::Unknown) -> Self {
        Self::try_from_unknown(value).unwrap()
    }
}
///Disables embedding of this post.
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct DisableRuleData {}
pub type DisableRule = atrium_api::types::Object<DisableRuleData>;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(tag = "$type")]
pub enum RecordEmbeddingRulesItem {
    #[serde(rename = "app.bsky.feed.postgate#disableRule")]
    DisableRule(Box<DisableRule>),
}
