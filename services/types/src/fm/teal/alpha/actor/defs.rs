// @generated - This file is generated by esquema-codegen (forked from atrium-codegen). DO NOT EDIT.
//!Definitions for the `fm.teal.alpha.actor.defs` namespace.
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct MiniProfileViewData {
    ///IPLD of the avatar
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub avatar: core::option::Option<String>,
    ///The decentralized identifier of the actor
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub did: core::option::Option<String>,
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub display_name: core::option::Option<String>,
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub handle: core::option::Option<String>,
}
pub type MiniProfileView = atrium_api::types::Object<MiniProfileViewData>;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct ProfileViewData {
    ///IPLD of the avatar
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub avatar: core::option::Option<String>,
    ///IPLD of the banner image
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub banner: core::option::Option<String>,
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub created_at: core::option::Option<atrium_api::types::string::Datetime>,
    ///Free-form profile description text.
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub description: core::option::Option<String>,
    ///Annotations of text in the profile description (mentions, URLs, hashtags, etc). May be changed to another (backwards compatible) lexicon.
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub description_facets: core::option::Option<
        Vec<crate::app::bsky::richtext::facet::Main>,
    >,
    ///The decentralized identifier of the actor
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub did: core::option::Option<String>,
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub display_name: core::option::Option<String>,
    ///The user's most recent item featured on their profile.
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub featured_item: core::option::Option<
        crate::fm::teal::alpha::actor::profile::FeaturedItem,
    >,
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub status: core::option::Option<crate::fm::teal::alpha::actor::status::Main>,
}
pub type ProfileView = atrium_api::types::Object<ProfileViewData>;
