// @generated - This file is generated by esquema-codegen (forked from atrium-codegen). DO NOT EDIT.
//!Definitions for the `fm.teal.alpha.actor.status` namespace.
use atrium_api::types::TryFromUnknown;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct RecordData {
    ///The unix timestamp of the expiry time of the item. If unavailable, default to 10 minutes past the start time.
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub expiry: core::option::Option<atrium_api::types::string::Datetime>,
    pub item: crate::fm::teal::alpha::feed::defs::PlayView,
    ///The unix timestamp of when the item was recorded
    pub time: atrium_api::types::string::Datetime,
}
pub type Record = atrium_api::types::Object<RecordData>;
pub type Main = Record;
impl From<atrium_api::types::Unknown> for RecordData {
    fn from(value: atrium_api::types::Unknown) -> Self {
        Self::try_from_unknown(value).unwrap()
    }
}
