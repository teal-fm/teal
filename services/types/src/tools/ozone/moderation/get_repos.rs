// @generated - This file is generated by esquema-codegen (forked from atrium-codegen). DO NOT EDIT.
//!Definitions for the `tools.ozone.moderation.getRepos` namespace.
pub const NSID: &str = "tools.ozone.moderation.getRepos";
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct ParametersData {
    pub dids: Vec<atrium_api::types::string::Did>,
}
pub type Parameters = atrium_api::types::Object<ParametersData>;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct OutputData {
    pub repos: Vec<atrium_api::types::Union<OutputReposItem>>,
}
pub type Output = atrium_api::types::Object<OutputData>;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(tag = "error", content = "message")]
pub enum Error {}
impl std::fmt::Display for Error {
    fn fmt(&self, _f: &mut std::fmt::Formatter) -> std::fmt::Result {
        Ok(())
    }
}
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(tag = "$type")]
pub enum OutputReposItem {
    #[serde(rename = "tools.ozone.moderation.defs#repoViewDetail")]
    ToolsOzoneModerationDefsRepoViewDetail(
        Box<crate::tools::ozone::moderation::defs::RepoViewDetail>,
    ),
    #[serde(rename = "tools.ozone.moderation.defs#repoViewNotFound")]
    ToolsOzoneModerationDefsRepoViewNotFound(
        Box<crate::tools::ozone::moderation::defs::RepoViewNotFound>,
    ),
}
