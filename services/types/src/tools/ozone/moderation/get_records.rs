// @generated - This file is generated by esquema-codegen (forked from atrium-codegen). DO NOT EDIT.
//!Definitions for the `tools.ozone.moderation.getRecords` namespace.
pub const NSID: &str = "tools.ozone.moderation.getRecords";
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct ParametersData {
    pub uris: Vec<String>,
}
pub type Parameters = atrium_api::types::Object<ParametersData>;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct OutputData {
    pub records: Vec<atrium_api::types::Union<OutputRecordsItem>>,
}
pub type Output = atrium_api::types::Object<OutputData>;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(tag = "error", content = "message")]
pub enum Error {}
impl std::fmt::Display for Error {
    fn fmt(&self, _f: &mut std::fmt::Formatter) -> std::fmt::Result {
        Ok(())
    }
}
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(tag = "$type")]
pub enum OutputRecordsItem {
    #[serde(rename = "tools.ozone.moderation.defs#recordViewDetail")]
    ToolsOzoneModerationDefsRecordViewDetail(
        Box<crate::tools::ozone::moderation::defs::RecordViewDetail>,
    ),
    #[serde(rename = "tools.ozone.moderation.defs#recordViewNotFound")]
    ToolsOzoneModerationDefsRecordViewNotFound(
        Box<crate::tools::ozone::moderation::defs::RecordViewNotFound>,
    ),
}
