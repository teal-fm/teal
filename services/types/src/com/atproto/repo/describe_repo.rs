// @generated - This file is generated by esquema-codegen (forked from atrium-codegen). DO NOT EDIT.
//!Definitions for the `com.atproto.repo.describeRepo` namespace.
pub const NSID: &str = "com.atproto.repo.describeRepo";
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct ParametersData {
    ///The handle or DID of the repo.
    pub repo: atrium_api::types::string::AtIdentifier,
}
pub type Parameters = atrium_api::types::Object<ParametersData>;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct OutputData {
    ///List of all the collections (NSIDs) for which this repo contains at least one record.
    pub collections: Vec<atrium_api::types::string::Nsid>,
    pub did: atrium_api::types::string::Did,
    ///The complete DID document for this account.
    pub did_doc: atrium_api::types::Unknown,
    pub handle: atrium_api::types::string::Handle,
    ///Indicates if handle is currently valid (resolves bi-directionally)
    pub handle_is_correct: bool,
}
pub type Output = atrium_api::types::Object<OutputData>;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(tag = "error", content = "message")]
pub enum Error {}
impl std::fmt::Display for Error {
    fn fmt(&self, _f: &mut std::fmt::Formatter) -> std::fmt::Result {
        Ok(())
    }
}
