// @generated - This file is generated by esquema-codegen (forked from atrium-codegen). DO NOT EDIT.
//!Definitions for the `com.atproto.admin.defs` namespace.
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct AccountViewData {
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub deactivated_at: core::option::Option<atrium_api::types::string::Datetime>,
    pub did: atrium_api::types::string::Did,
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub email: core::option::Option<String>,
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub email_confirmed_at: core::option::Option<atrium_api::types::string::Datetime>,
    pub handle: atrium_api::types::string::Handle,
    pub indexed_at: atrium_api::types::string::Datetime,
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub invite_note: core::option::Option<String>,
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub invited_by: core::option::Option<crate::com::atproto::server::defs::InviteCode>,
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub invites: core::option::Option<
        Vec<crate::com::atproto::server::defs::InviteCode>,
    >,
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub invites_disabled: core::option::Option<bool>,
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub related_records: core::option::Option<Vec<atrium_api::types::Unknown>>,
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub threat_signatures: core::option::Option<Vec<ThreatSignature>>,
}
pub type AccountView = atrium_api::types::Object<AccountViewData>;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct RepoBlobRefData {
    pub cid: atrium_api::types::string::Cid,
    pub did: atrium_api::types::string::Did,
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub record_uri: core::option::Option<String>,
}
pub type RepoBlobRef = atrium_api::types::Object<RepoBlobRefData>;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct RepoRefData {
    pub did: atrium_api::types::string::Did,
}
pub type RepoRef = atrium_api::types::Object<RepoRefData>;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct StatusAttrData {
    pub applied: bool,
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub r#ref: core::option::Option<String>,
}
pub type StatusAttr = atrium_api::types::Object<StatusAttrData>;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct ThreatSignatureData {
    pub property: String,
    pub value: String,
}
pub type ThreatSignature = atrium_api::types::Object<ThreatSignatureData>;
