services:
  aqua-api:
    build:
      context: .
      dockerfile: apps/aqua/Dockerfile
    container_name: aqua-app
    ports:
      - "3000:3000"
    networks:
      - app_network
    depends_on:
      - postgres
    env_file:
      - .env
  postgres:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - app_network
    env_file: .env
  # traefik:
  #   image: traefik:v2.10
  #   container_name: traefik
  #   command:
  #     - "--api.insecure=true"
  #     - "--providers.file.directory=/etc/traefik/dynamic"
  #     - "--providers.file.watch=true"
  #     - "--entrypoints.web.address=:80"
  #   ports:
  #     - "80:80" # HTTP
  #     - "8080:8080" # Dashboard
  #   volumes:
  #     - ./traefik/dynamic:/etc/traefik/dynamic:ro
  #   networks:
  #     - app_network
  #   extra_hosts:
  #     - "host.docker.internal:host-gateway" # This allows reaching host machine


  # redis:
  #   image: redis:latest
  #   container_name: redis_cache
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   command: redis-server --appendonly yes
  #   networks:
  #     - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
#  redis_data:
