services:
  aqua-api:
    build:
      context: .
      dockerfile: apps/aqua/Dockerfile
    container_name: aqua-app
    ports:
      - "3000:3000"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - app_network
    depends_on:
      - postgres
    env_file:
      - .env
    environment:
      DATABASE_URL: ${DOCKER_DB_URL}
  amethyst:
    build:
      context: .
      dockerfile: apps/amethyst/Dockerfile
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - app_network
    environment:
      CLIENT_ADDRESS: ${CLIENT_ADDRESS}
      EXPO_PUBLIC_DID_WEB: ${PUBLIC_DID_WEB}
  postgres:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - app_network
  cadet:
    image: ghcr.io/espeon/cadet
    ports:
      - "9000:9000"
    env_file:
      - .env
    environment:
      DATABASE_URL: ${DOCKER_DB_URL}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - app_network
    depends_on:
      - postgres
  satellite:
    image: ghcr.io/espeon/satellite
    ports:
      - "3132:3000"
    env_file:
      - .env
    environment:
      DATABASE_URL: ${DOCKER_DB_URL}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - app_network
    depends_on:
      - postgres
  piper:
#    image: ghcr.io/teal-fm/piper:main
    image: fatfingers23/piper:latest
    # Depends on your .env.air
    ports:
      - "8080:8080"
    env_file:
      - .env.air
    volumes:
      - piper_data:/db

#  db-migrations
  #TODO to not forget to add an image to run db migrations or add it to aqua in a bash script on run
networks:
  app_network:
    driver: bridge
volumes:
  postgres_data:
  caddy_data:
  caddy_config:
  piper_data:
